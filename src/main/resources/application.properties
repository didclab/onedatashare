# Application properties to be used in local/development environments

# Define a custom port instead of the default 8080
server.port=${ODS_APP_PORT:8080}
spring.application.name=ODSCore

redirect.uri=${ODS_REDIRECT_URI:http://localhost:${server.port}}
redirect.uri.string=http://localhost:8080

#Credential Service Url using Eureka, the env variable is for not using Eureka exmaple being localhost port 8081
cred.service.uri=${ODS_CRED_URI:http://EndpointCredentialService/v1/endpoint-cred}

meta.service.uri=${ODS_META_URI:http://ODSMETADATA}

#Transfer Scheduler Url will be using Eureka the env variable isfor local testing and should be added to the boot.sh otherwise you probably want to use eureka
transfer.scheduler.service.uri=${ODS_SCHEDULER_URI:http://ODSTRANSFERSCHEDULERSERVICE}
#Private key for ods
ods.rsa.private.key=${ODS_RSA_PRIVATE_KEY}

# Dropbox config
dropbox.redirectUri=${redirect.uri}/api/oauth/dropbox
dropbox.identifier=${ODS_DROPBOX_IDENTIFIER:OneDataShare-DIDCLab}
dropbox.key=${ODS_DROPBOX_KEY}
dropbox.secret=${ODS_DROPBOX_SECRET}

# Google config
gdrive.appName=OneDataShare
gdrive.authUri=https://accounts.google.com/o/oauth2/auth
gdrive.tokenUri=https://accounts.google.com/o/oauth2/token
gdrive.authProviderUri=https://www.googleapis.com/oauth2/v1/certs
gdrive.redirectUri=${redirect.uri}/api/oauth/gdrive
gdrive.projectId=${ODS_GDRIVE_PROJECT_ID}
gdrive.clientId=${ODS_GDRIVE_CLIENT_ID}
gdrive.clientSecret=${ODS_GDRIVE_CLIENT_SECRET}

# Box config
box.authUri=https://account.box.com/api/oauth2/authorize
box.scope=root_readwrite
box.redirectUri=${redirect.uri}/api/oauth/box
box.clientId=${ODS_BOX_CLIENT_ID}
box.clientSecret=${ODS_BOX_CLIENT_SECRET}

#GridFTP settings
gftp.redirectUri=${redirect.uri}/api/oauth/gftp
gftp.clientId=${ODS_GSIFTP_CLIENT_ID}
gftp.clientSecret=${ODS_GSIFTP_CLIENT_SECRET}

# Database settings
spring.data.mongodb.database=onedatashare

#logging.file=${HOME}/logs/application.log
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

#For not sending null data
spring.jackson.default-property-inclusion=NON_NULL

#Documenation settings
springdoc.cache.disabled=false
springdoc.default-produces-media-type=application/json

# JWT
springbootwebfluxjjwt.password.encoder.secret=${ODS_JWT_PASS_ENC_SECRET}
springbootwebfluxjjwt.password.encoder.iteration=${ODS_JWT_PASS_ENC_ITR}
springbootwebfluxjjwt.password.encoder.keylength=${ODS_JWT_PASS_ENC_LEN}
springbootwebfluxjjwt.jjwt.secret=${ODS_JWT_SECRET}

#Eureka config
eureka.client.enabled=true
eureka.client.serviceUrl.defaultZone= http://${EUREKA_USER:admin}:${EUREKA_PASS:admin}@${EUREKA_URI:localhost:8090}/eureka
eureka.client.healthcheck.enabled=true
eureka.instance.metadata-map.startup=${random.int}

management.endpoint.health.enabled=true

#github work
github.organization.id:${ODS_GITHUB_ORG_ID:5099734}
github.token:${ODS_GITHUB_TOKEN}
github.repo.uri:${ODS_GITHUB_URI:didclab/onedatashare}
spring.threads.virtual.enabled=true

#OAuth2 Login client details
spring.security.oauth2.client.registration.google.client-id=52271317415-7nid8c1miamrpm0e4od78o24h8rs94uo.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.github.client-id=d073efb86050f057dfaa
spring.security.oauth2.client.registration.github.client-secret=02dac53d36086dcedde46dc38c910dae4723798d
spring.security.oauth2.client.registration.cilogon.client-id=cilogon:/client_id/7d6a608e8ef8c872dc04240edd43329c
spring.security.oauth2.client.registration.cilogon.client-secret=EYJEZ4D7Y_OvVsGAtSYJ720uo0EWnSprP_I11GdnK2R5O0h5yIfIdMz66CrD1hkzE6OvLCXh6f5Ffj-MeFnZbg

app.auth.oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect

