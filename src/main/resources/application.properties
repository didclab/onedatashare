# Application properties to be used in local/development environments

# Define a custom port instead of the default 8080
server.port=${ODS_APP_PORT:8080}

redirect.uri=${ODS_REDIRECT_URI:http://localhost:${server.port}}

#Private key for ods
ods.rsa.private.key=${ODS_RSA_PRIVATE_KEY}

# Dropbox config
dropbox.redirectUri=${redirect.uri}/api/oauth/dropbox
dropbox.identifier=${ODS_DROPBOX_IDENTIFIER}OneDataShare-DIDCLab
dropbox.key=${ODS_DROPBOX_KEY}
dropbox.secret=${ODS_DROPBOX_SECRET}

# Google config
gdrive.authUri=https://accounts.google.com/o/oauth2/auth
gdrive.tokenUri=https://accounts.google.com/o/oauth2/token
gdrive.authProviderUri=https://www.googleapis.com/oauth2/v1/certs
gdrive.redirectUri=${redirect.uri}/api/oauth/googledrive
gdrive.projectId=${ODS_GDRIVE_PROJECT_ID}
gdrive.clientId=${ODS_GDRIVE_CLIENT_ID}
gdrive.clientSecret=${ODS_GDRIVE_CLIENT_SECRET}

# Box config
box.authUri=https://account.box.com/api/oauth2/authorize
box.scope=root_readwrite
box.redirectUri=${redirect.uri}/api/oauth/box
box.clientId=${ODS_BOX_CLIENT_ID}
box.clientSecret=${ODS_BOX_CLIENT_SECRET}

#GridFTP settings
gsiftp.redirectUri=${redirect.uri}/api/oauth/gridftp
gsiftp.clientId=${ODS_GSIFTP_CLIENT_ID}
gsiftp.clientSecret=${ODS_GSIFTP_CLIENT_SECRET}

# Database settings
spring.data.mongodb.database=onedatashare
#spring.data.mongodb.username=${MONGO_DB_USERNAME}
#spring.data.mongodb.password=${MONGO_DB_PASSWORD}
#This is the Dockerfile uri 
spring.data.mongodb.host=${ODS_DB_HOST:localhost}
#spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
#logging.file=${HOME}/logs/application.log
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

# Freshdesk settings
freshdesk.api.url=https://onedatashare.freshdesk.com/api/v2/tickets

#For not sending null data
spring.jackson.default-property-inclusion=NON_NULL

#Documenation settings
springdoc.cache.disabled=false
springdoc.default-produces-media-type=application/json

# JWT
springbootwebfluxjjwt.password.encoder.secret=${ODS_JWT_PASS_ENC_SECRET}
springbootwebfluxjjwt.password.encoder.iteration=${ODS_JWT_PASS_ENC_ITR}
springbootwebfluxjjwt.password.encoder.keylength=${ODS_JWT_PASS_ENC_LEN}
springbootwebfluxjjwt.jjwt.secret=${ODS_JWT_SECRET}